                    How to implement a promise-based API notes

alarm() API returns a promise so the following can be done:
  promise chaining
  Promise.all()
  async / await

mdn web docs given example

const name = document.querySelector("#name");
const delay = document.querySelector("#delay");
const button = document.querySelector("#set-alarm");
const output = document.querySelector("#output");

function alarm(person, delay) {
  return new Promise((resolve, reject) => {
    if (delay < 0) {
      throw new Error("Alarm delay must not be negative");
    }
    setTimeout(() => {
      resolve('Wake up, ${person}!');
    }, delay);
  });
}

button.addEventListener("click", async () => {
  try {
    const message = await alarm(name.value, delay.value);
    output.textContent = message;
  } catch (error) {
    output.textContent = 'Couldn't set alarm: ${error}';
  }
});


How to implement a promise-based API - Learn Web Development: MDN. Learn web development | MDN. (n.d.). Retrieved from https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Implementing_a_promise-based_API